{"version":3,"sources":["redux/contacts/contacts-operations.js","components/AuthNav/AuthNav.module.css","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","redux/contacts/contacts-actions.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/auth/auth-operations.js","redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/store.js","redux/auth/auth-selectors.js","components/PrivateRoute.js","components/PublicRoute.js","components/Container/Container.js","components/AuthNav/AuthNav.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","App.js","index.js"],"names":["axios","defaults","baseURL","fetchContacts","createAsyncThunk","get","then","response","data","addContact","contactData","contact","name","number","password","post","deleteContact","contactId","delete","module","exports","changeFilter","createAction","message","token","headers","common","Authorization","register","credentials","a","rejectWithValue","logIn","logOut","_","getCurrentUser","thunkAPI","state","getState","persistedToken","auth","entities","createReducer","fulfilled","payload","meta","filter","id","arg","isLoading","pending","rejected","error","combineReducers","initialState","user","email","isLoggedIn","isGettingCurrentUser","authSlice","createSlice","extraReducers","toast","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","getIsLoggedIn","getUserName","getIsGettingCurrentUser","PrivateRoute","children","redirectTo","routeProps","useSelector","to","PublicRoute","restricted","shouldRedirect","Container","className","s","container","AuthNav","auth_nav","link","activeClassName","activeLink","Navigation","exact","UserMenu","dispatch","useDispatch","user_menu","bottom","type","onClick","AppBar","navigation","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3de6cc19.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const fetchContacts = createAsyncThunk('contacts/fetchContacts', () => {\r\n    const contacts = axios.get('/contacts').then(response => response.data);\r\n    //  console.log(contacts);\r\n    return contacts;\r\n});\r\n\r\nexport const addContact = createAsyncThunk(\r\n    'contacts/addContact',\r\n    contactData => {\r\n        const contact = {\r\n            name: contactData.name,\r\n            number: contactData.number,\r\n            password: contactData.password,\r\n        };\r\n        const newContact = axios\r\n            .post('/contacts', contact)\r\n            .then(({ data }) => data);\r\n        // console.log(newContact);\r\n        return newContact;\r\n    },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n    'contacts/deleteContact',\r\n    contactId => {\r\n        // console.log(contactId);\r\n        return axios.delete(`/contacts/${contactId}`).then(({ data }) => data);\r\n    },\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth_nav\":\"AuthNav_auth_nav__2iH2z\",\"link\":\"AuthNav_link__W3bXE\",\"activeLink\":\"AuthNav_activeLink__16KdH AuthNav_link__W3bXE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__2kxTc\",\"activeLink\":\"Navigation_activeLink__qViiG Navigation_link__2kxTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_menu\":\"UserMenu_user_menu__2igR6\",\"bottom\":\"UserMenu_bottom__39NZE\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const fetchContactRequest = createAction('contacts/fetchContactRequest')\r\n// export const fetchContactSuccess = createAction('contacts/fetchContactSuccess')\r\n// export const fetchContactError = createAction('contacts/fetchContactError')\r\n\r\n// export const addContactRequest = createAction('contacts/addContactRequest');\r\n// export const addContactSuccess = createAction('contacts/addContactSuccess');\r\n// export const addContactError = createAction('contacts/addContactError')\r\n\r\n\r\n// export const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\n// export const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\n// export const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3_jOR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"AppBar_navigation__3eDLK\"};","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst message = 'Something went wrong. Please, try again';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nexport const register = createAsyncThunk(\r\n    'auth/register',\r\n    async (credentials, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await axios.post('/users/signup', credentials);\r\n            token.set(data.token);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(message);\r\n        }\r\n    },\r\n);\r\n\r\nexport const logIn = createAsyncThunk(\r\n    'auth/login',\r\n    async (credentials, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await axios.post('/users/login', credentials);\r\n            token.set(data.token);\r\n            return data;\r\n        } catch (error) {\r\n            // console.table(error);\r\n            return rejectWithValue(message);\r\n        }\r\n    },\r\n);\r\n\r\nexport const logOut = createAsyncThunk(\r\n    'auth/logout',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            await axios.post('/users/logout');\r\n            token.unset();\r\n        } catch (error) {\r\n            return rejectWithValue(message);\r\n        }\r\n    },\r\n);\r\n\r\nexport const getCurrentUser = createAsyncThunk(\r\n    'auth/refresh',\r\n    async (_, thunkAPI) => {\r\n        const state = thunkAPI.getState();\r\n        // console.log(state);\r\n        const persistedToken = state.auth.token;\r\n        // console.log(persistedToken);\r\n\r\n        if (persistedToken === null) {\r\n            return thunkAPI.rejectWithValue();\r\n        }\r\n        token.set(persistedToken);\r\n        try {\r\n            const { data } = await axios.get('/users/current');\r\n            // console.log(data);\r\n            return data;\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue(message);\r\n        }\r\n    },\r\n);\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n    fetchContacts,\r\n    addContact,\r\n    deleteContact,\r\n} from './contacts-operations';\r\nimport { changeFilter } from './contacts-actions';\r\n\r\nconst entities = createReducer([], {\r\n    [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n    [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\r\n    [deleteContact.fulfilled]: (state, { meta }) =>\r\n        state.filter(contact => contact.id !== meta.arg),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n\r\n    [addContact.pending]: () => true,\r\n    [addContact.fulfilled]: () => false,\r\n    [addContact.rejected]: () => false,\r\n\r\n    [deleteContact.pending]: () => true,\r\n    [deleteContact.fulfilled]: () => false,\r\n    [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContacts.rejected]: (_, { payload }) => payload,\r\n    [fetchContacts.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n    entities,\r\n    filter,\r\n    isLoading,\r\n    error,\r\n});\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { register, logIn, logOut, getCurrentUser } from './auth-operations';\r\n\r\nconst initialState = {\r\n    user: { name: '', email: '' },\r\n    token: null,\r\n    isLoggedIn: false,\r\n    error: null,\r\n    isGettingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    extraReducers: {\r\n        [register.pending]: state => {\r\n            return {\r\n                ...state,\r\n                error: null,\r\n            };\r\n        },\r\n        [register.fulfilled]: (state, { payload }) => {\r\n            return {\r\n                ...state,\r\n                user: payload.user,\r\n                token: payload.token,\r\n                isLoggedIn: true,\r\n            };\r\n        },\r\n        [register.rejected]: (_, { payload }) => {\r\n            toast.error(payload);\r\n        },\r\n\r\n        [logIn.pending]: state => {\r\n            return {\r\n                ...state,\r\n                error: null,\r\n            };\r\n        },\r\n        [logIn.fulfilled]: (state, { payload }) => {\r\n            return {\r\n                ...state,\r\n                user: payload.user,\r\n                token: payload.token,\r\n                isLoggedIn: true,\r\n            };\r\n        },\r\n        [logIn.rejected]: (state, { payload }) => {\r\n            toast.error(payload);\r\n            return {\r\n                ...state,\r\n                error: 'что-то',\r\n            };\r\n        },\r\n\r\n        [logOut.pending]: state => {\r\n            return {\r\n                ...state,\r\n                error: null,\r\n            };\r\n        },\r\n        [logOut.fulfilled]: state => {\r\n            return {\r\n                ...initialState,\r\n            };\r\n        },\r\n        [logOut.rejected]: (_, { payload }) => {\r\n            toast.error(payload);\r\n        },\r\n\r\n        [getCurrentUser.pending]: state => {\r\n            return {\r\n                ...state,\r\n                isGettingCurrentUser: true,\r\n            };\r\n        },\r\n        [getCurrentUser.fulfilled]: (state, { payload }) => {\r\n            return {\r\n                ...state,\r\n                user: payload,\r\n                isLoggedIn: true,\r\n                isGettingCurrentUser: false,\r\n            };\r\n        },\r\n        [getCurrentUser.rejected]: state => {\r\n            return {\r\n                ...state,\r\n                isGettingCurrentUser: false,\r\n            };\r\n        },\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport authReducer from './auth/auth-slice';\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware: getDefaultMiddleware =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [\r\n                    FLUSH,\r\n                    REHYDRATE,\r\n                    PAUSE,\r\n                    PERSIST,\r\n                    PURGE,\r\n                    REGISTER,\r\n                ],\r\n            },\r\n        }),\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","export const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nexport const getUserName = state => state.auth.user.name;\r\nexport const getIsGettingCurrentUser = state => state.auth.isGettingCurrentUser;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({\r\n    children,\r\n    redirectTo = '/',\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n    return (\r\n        <Route {...routeProps}>\r\n            {isLoggedIn ? children : <Redirect to={redirectTo}></Redirect>}\r\n        </Route>\r\n    );\r\n}\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n    children,\r\n    redirectTo = '/',\r\n    restricted = false,\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n    const shouldRedirect = restricted && isLoggedIn;\r\n    return (\r\n        <Route {...routeProps}>\r\n            {shouldRedirect ? <Redirect to={redirectTo}></Redirect> : children}\r\n        </Route>\r\n    );\r\n}\r\n\r\n<Redirect to=\"/\"></Redirect>;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n    return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => {\r\n    return (\r\n        <div className={s.auth_nav}>\r\n            <NavLink\r\n                to=\"/register\"\r\n                className={s.link}\r\n                activeClassName={s.activeLink}\r\n            >\r\n                Sign Up\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/login\"\r\n                className={s.link}\r\n                activeClassName={s.activeLink}\r\n            >\r\n                Login\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthNav;\r\n","import { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport s from './Navigation.module.css';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\r\n\r\nconst Navigation = () => {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n    return (\r\n        <nav>\r\n            <NavLink\r\n                to=\"/\"\r\n                exact\r\n                className={s.link}\r\n                activeClassName={s.activeLink}\r\n            >\r\n                Home\r\n            </NavLink>\r\n            {isLoggedIn && (\r\n                <NavLink\r\n                    to=\"/contacts\"\r\n                    className={s.link}\r\n                    activeClassName={s.activeLink}\r\n                >\r\n                    Contacts\r\n                </NavLink>\r\n            )}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserName } from 'redux/auth/auth-selectors';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport s from './UserMenu.module.css';\r\n\r\nconst UserMenu = () => {\r\n    const dispatch = useDispatch();\r\n    const name = useSelector(getUserName);\r\n    return (\r\n        <div className={s.user_menu}>\r\n            <p>Welcome, {name}</p>\r\n            <button\r\n                className={s.bottom}\r\n                type=\"button\"\r\n                onClick={() => dispatch(logOut())}\r\n            >\r\n                Log Out\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserMenu;\r\n","import { useSelector } from 'react-redux';\r\nimport AuthNav from 'components/AuthNav/AuthNav';\r\nimport Navigation from 'components/Navigation/Navigation';\r\nimport UserMenu from 'components/UserMenu/UserMenu';\r\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\r\nimport s from './AppBar.module.css';\r\n\r\nconst AppBar = () => {\r\n    const isLoggedIn = useSelector(getIsLoggedIn);\r\n    // console.log(isLoggedIn);\r\n    return (\r\n        <aside className={s.navigation}>\r\n            <Navigation />\r\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default AppBar;\r\n","import { lazy, Suspense, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport Container from './components/Container/Container';\r\nimport AppBar from 'components/AppBar/AppBar';\r\nimport { getIsGettingCurrentUser } from './redux/auth/auth-selectors';\r\nimport { getCurrentUser } from './redux/auth/auth-operations';\r\n\r\nconst HomeView = lazy(() =>\r\n    import('./views/HomeView' /* webpackChunkName: \"home-view\" */),\r\n);\r\nconst RegisterView = lazy(() =>\r\n    import('./views/RegisterView' /* webpackChunkName: \"register-view\" */),\r\n);\r\nconst LoginView = lazy(() =>\r\n    import('./views/LoginView' /* webpackChunkName: \"login-view\" */),\r\n);\r\nconst ContactsView = lazy(() =>\r\n    import('./views/ContactsView' /* webpackChunkName: \"contacts-view\" */),\r\n);\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const isGettingCurrentUser = useSelector(getIsGettingCurrentUser);\r\n    // console.log('isGettingCurrentUser', isGettingCurrentUser);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCurrentUser());\r\n    }, [dispatch]);\r\n    return (\r\n        !isGettingCurrentUser && (\r\n            <Container>\r\n                <AppBar />\r\n\r\n                <Suspense fallback={<h1>LOADING...</h1>}>\r\n                    <Switch>\r\n                        <PublicRoute exact path=\"/\">\r\n                            <HomeView />\r\n                        </PublicRoute>\r\n                        <PublicRoute path=\"/register\" restricted>\r\n                            <RegisterView />\r\n                        </PublicRoute>\r\n                        <PublicRoute\r\n                            path=\"/login\"\r\n                            redirectTo=\"/contacts\"\r\n                            restricted\r\n                        >\r\n                            <LoginView />\r\n                        </PublicRoute>\r\n                        <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n                            <ContactsView />\r\n                        </PrivateRoute>\r\n                    </Switch>\r\n                </Suspense>\r\n                <ToastContainer />\r\n            </Container>\r\n        )\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport { persistor, store } from './redux/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <PersistGate loading={null} persistor={persistor}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                </BrowserRouter>\r\n            </PersistGate>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}