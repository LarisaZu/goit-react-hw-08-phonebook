{"version":3,"sources":["App.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","redux/operations.js","redux/actions.js","redux/reducer.js","redux/store.js","components/Container/Container.js","redux/selectors.js","components/ContactList/ContactList.js","components/Form/Form.js","components/Filter/Filter.js","App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","get","then","response","data","addContact","contactData","contact","name","number","newContact","post","console","log","deleteContact","contactId","delete","changeFilter","createAction","entities","createReducer","fulfilled","_","payload","state","meta","filter","id","arg","isLoading","pending","rejected","error","combineReducers","store","configureStore","reducer","contacts","phonebookReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ignoredActionPaths","devTools","process","Container","children","className","s","container","getFilter","getVisibleContacts","createSelector","normalizedValue","value","toLowerCase","includes","ContactList","useSelector","dispatch","useDispatch","useEffect","length","list","map","item","type","onClick","btn_delete","Form","allContacts","useState","setNewContact","handleChange","event","target","notify","message","toast","position","POSITION","TOP_CENTER","nameInputId","shortid","generate","numberInputId","onSubmit","preventDefault","find","el","form","htmlFor","label","onChange","pattern","title","required","add_button","Filter","App","wrapper","phonebook","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9285ee5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__L4c9L\",\"phonebook\":\"App_phonebook__3qsvG\",\"contacts\":\"App_contacts__3nQEB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__c-5oH\",\"item\":\"ContactList_item__2alvX\",\"btn_delete\":\"ContactList_btn_delete__240P_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2_CQj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2lzzc\"};","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = createAsyncThunk('contacts/fetchContacts', () => {\r\n    const contacts = axios.get('/contacts').then(response => response.data);\r\n    //  console.log(contacts);\r\n    return contacts;\r\n});\r\n\r\nexport const addContact = createAsyncThunk(\r\n    'contacts/addContact',\r\n    contactData => {\r\n        const contact = {\r\n            name: contactData.name,\r\n            number: contactData.number,\r\n        };\r\n        const newContact = axios\r\n            .post('/contacts', contact)\r\n            .then(({ data }) => data);\r\n        console.log(newContact);\r\n        return newContact;\r\n    },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n    'contacts/deleteContact',\r\n    contactId => {\r\n        console.log(contactId);\r\n        return axios.delete(`/contacts/${contactId}`).then(({ data }) => data);\r\n    },\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const fetchContactRequest = createAction('contacts/fetchContactRequest')\r\n// export const fetchContactSuccess = createAction('contacts/fetchContactSuccess')\r\n// export const fetchContactError = createAction('contacts/fetchContactError')\r\n\r\n// export const addContactRequest = createAction('contacts/addContactRequest');\r\n// export const addContactSuccess = createAction('contacts/addContactSuccess');\r\n// export const addContactError = createAction('contacts/addContactError')\r\n\r\n\r\n// export const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\n// export const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\n// export const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { fetchContacts, addContact, deleteContact } from './operations';\r\nimport { changeFilter } from './actions';\r\n\r\nconst entities = createReducer([], {\r\n    [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n    [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\r\n    [deleteContact.fulfilled]: (state, {meta}) =>\r\n        state.filter(contact => contact.id !== meta.arg),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n\r\n    [addContact.pending]: () => true,\r\n    [addContact.fulfilled]: () => false,\r\n    [addContact.rejected]: () => false,\r\n\r\n    [deleteContact.pending]: () => true,\r\n    [deleteContact.fulfilled]: () => false,\r\n    [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContacts.rejected]: (_, { payload }) => payload,\r\n    [fetchContacts.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n    entities,\r\n    filter,\r\n    isLoading,\r\n    error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport phonebookReducer from './reducer';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: phonebookReducer,\r\n    },\r\n    middleware: getDefaultMiddleware =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [\r\n                    FLUSH,\r\n                    REHYDRATE,\r\n                    PAUSE,\r\n                    PERSIST,\r\n                    PURGE,\r\n                    REGISTER,\r\n                ],\r\n        ignoredActionPaths: ['meta.arg', 'payload.timestamp'],\r\n            },\r\n        }),\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n    return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getContacts = state => state.contacts.entities;\r\n\r\n// export const getVisibleContacts = state => {\r\n//     const contacts = getContacts(state);\r\n//     const filter = getFilter(state);\r\n//     const normalizedValue = value => value.toLowerCase();\r\n\r\n//     return contacts.filter(contact =>\r\n//         normalizedValue(contact.name).includes(normalizedValue(filter)),\r\n//     );\r\n// };\r\n\r\nexport const getVisibleContacts = createSelector(\r\n    [getContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedValue = value => value.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            normalizedValue(contact.name).includes(normalizedValue(filter)),\r\n        );\r\n    },\r\n);\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getVisibleContacts } from 'redux/selectors';\r\nimport { deleteContact, fetchContacts } from 'redux/operations';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n    const contacts = useSelector(getVisibleContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchContacts());\r\n    }, [dispatch]);\r\n\r\n    // const onDelete = contactId => {\r\n    //     dispatch(deleteContact(contactId));\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            {contacts.length > 0 && (\r\n                <ul className={s.list}>\r\n                    {contacts.map(({ id, name, number }) => (\r\n                        <li key={id} className={s.item}>\r\n                            <p>\r\n                                {name}: {number}\r\n                            </p>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => dispatch(deleteContact(id))}\r\n                                className={s.btn_delete}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport shortid from 'shortid';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './Form.module.css';\r\nimport {addContact} from 'redux/operations';\r\n\r\nfunction Form() {\r\n    const allContacts = useSelector(state=> state.contacts.entities);\r\n    const dispatch = useDispatch();\r\n    const [newContact, setNewContact] = useState({ name: '', number: '' });\r\n    const { name, number } = newContact;\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setNewContact({\r\n            ...newContact,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        allContacts.find(\r\n            el => el.name.toLowerCase() === normalizedValue(newContact.name),\r\n        )\r\n            ? notify(`${newContact.name} is already in contact`)\r\n            : dispatch(addContact(newContact));\r\n\r\n        setNewContact({ name: '', number: '' });\r\n    };\r\n\r\n    const normalizedValue = value => {\r\n        return value.toLowerCase();\r\n    };\r\n\r\n    const notify = message =>\r\n        toast(message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            className: s.toast,\r\n        });\r\n\r\n    const nameInputId = shortid.generate();\r\n    const numberInputId = shortid.generate();\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit} className={s.form}>\r\n                <label htmlFor={nameInputId} className={s.label}>\r\n                    Name\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        id={nameInputId}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \r\n                            Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <label htmlFor={numberInputId} className={s.label}>\r\n                    Number\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={handleChange}\r\n                        id={numberInputId}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\" className={s.add_button}>\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getFilter } from 'redux/selectors';\r\nimport { changeFilter } from 'redux/actions';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n    const dispatch = useDispatch();\r\n    const value = useSelector(getFilter);\r\n\r\n    const onChange = event => {\r\n        dispatch(changeFilter(event.target.value));\r\n    };\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            Find contact by name\r\n            <input type=\"text\" value={value} onChange={onChange}></input>\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './App.module.css';\r\nimport Container from './components/Container/Container';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Form from './components/Form/Form';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nfunction App() {\r\n    return (\r\n        <Container>\r\n            <div className={s.wrapper}>\r\n                <div className={s.phonebook}>\r\n                    <h1>Phonebook</h1>\r\n                    <Form />\r\n                </div>\r\n                <div className={s.contacts}>\r\n                    <h2>Contacts</h2>\r\n                    <Filter />\r\n\r\n                    <ContactList />\r\n                    <ToastContainer />\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport  store  from './redux/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n                <App />\r\n            {/* </PersistGate> */}\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3mQkK\",\"label\":\"Form_label__Wjr2v\",\"add_button\":\"Form_add_button__2WftL\",\"toast\":\"Form_toast__eNdxr\"};"],"sourceRoot":""}